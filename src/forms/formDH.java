/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import DAO.BillDAO;
import DAO.Donhang;
import DAO.DonhangDAO;
import DAO.Khachhang;
import DAO.KhachhangDAO;
import DAO.MySQL;
import Tools.Dialog;
import Tools.PrintPDF;
import Tools.Tienich;
import java.awt.Font;
import java.io.File;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chu Ai Duc
 */
public class formDH extends javax.swing.JInternalFrame {

    /**
     * Creates new form formNV
     */
    DefaultTableModel model;
    DonhangDAO dao = new DonhangDAO();
    KhachhangDAO daoKH = new KhachhangDAO();

    public formDH() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        btnChitiet.setEnabled(false);
        txtDiachi.setEditable(false);
        txtHoten.setEditable(false);
        txtSDT.setEditable(false);
        txtMaKH.setEditable(false);
        
        tblDH.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tblDH.getTableHeader().setOpaque(false);
        tblDH.getTableHeader().setBackground(new java.awt.Color(32, 136, 203));
        tblDH.getTableHeader().setForeground(new java.awt.Color(255, 255, 255));
    }

    public void themdulieu(ArrayList<Donhang> list) {
        dao.reLoad();
        daoKH.reLoad();
        model = (DefaultTableModel) tblDH.getModel();
        model.setRowCount(0);
        for (Donhang d : list) {
            model.addRow(new Object[]{
                d.getMadh(),
                daoKH.find(d.getMakh()).getHoten(),
                daoKH.find(d.getMakh()).getSdt(),
                daoKH.find(d.getMakh()).getDiachi(),
                dao.getTongtien(d.getMadh()),
                d.getTrangthai(),
                Tienich.FixNgayDK(d.getNgaydh())
            });
        }
    }

    public void loaddata() {
        dao.reLoad();
        daoKH.reLoad();
        model = (DefaultTableModel) tblDH.getModel();
        model.setRowCount(0);
        ArrayList<Donhang> ds = dao.laydanhsach();
        for (Donhang d : ds) {
            model.addRow(new Object[]{
                d.getMadh(),
                daoKH.find(d.getMakh()).getHoten(),
                daoKH.find(d.getMakh()).getSdt(),
                daoKH.find(d.getMakh()).getDiachi(),
                dao.getTongtien(d.getMadh()),
                d.getTrangthai(),
                Tienich.FixNgayDK(d.getNgaydh())
            });
        }

    }

//    public ArrayList<Khachhang> searchkh() {
//        daoKH.reLoad();
//        ArrayList<Khachhang> ketquatimkiem = new ArrayList<>();
//        String value = txtsearch.getText().trim().toUpperCase();
//
//        ArrayList<Khachhang> dskh = daoKH.laydanhsach();
//        try {
//            for (int i = 0; i < dskh.size(); i++) {
//
//                if (dskh.get(i).getHoten().toUpperCase().contains(value) | dskh.get(i).getSdt().toUpperCase().contains(value)) {
//
//                    ketquatimkiem.add(dskh.get(i));
//                }
//            }
//
//        } catch (Exception e) {
//
//        }
//        return ketquatimkiem;
//    }
    public ArrayList<Donhang> searchdh() {

        try {
            dao.reLoad();
            ArrayList<Donhang> list = new ArrayList<>();
            String tim = txtsearch.getText();

            String sql = "select donhang.MADH, khachhang.HOTEN from donhang join chitietdonhang on donhang.MADH=chitietdonhang.MADH join khachhang on donhang.MAKH=khachhang.MAKH where khachhang.HOTEN like '%" + tim + "%' or khachhang.sdt like '%" + tim + "%' or donhang.ngaydathang like '%" + tim + "%' group by donhang.MADH";

            System.out.println("Tim chu");
            ResultSet rs = MySQL.chaySelect(sql, (Object) null);
            while (rs.next()) {
                list.add(dao.find(rs.getInt("madh")));
            }
            return list;
        } catch (Exception e) {
            return null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaDH = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtHoten = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDH = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtDiachi = new javax.swing.JTextField();
        btnChitiet = new javax.swing.JButton();
        linediachi = new javax.swing.JSeparator();
        lineDT = new javax.swing.JSeparator();
        lineHoten = new javax.swing.JSeparator();
        lineMAKH = new javax.swing.JSeparator();
        btnPrint = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Quản lý nhân viên");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(782, 495));
        jPanel1.setPreferredSize(new java.awt.Dimension(782, 495));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Họ và tên");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        txtMaDH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMaDH.setForeground(new java.awt.Color(255, 255, 255));
        txtMaDH.setText("Mã khách hàng");
        jPanel1.add(txtMaDH, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Số điện thoại");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, -1, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Địa chỉ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, -1, -1));

        txtMaKH.setBackground(new java.awt.Color(0,0,0,0));
        txtMaKH.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        txtMaKH.setForeground(new java.awt.Color(255, 255, 255));
        txtMaKH.setBorder(null);
        txtMaKH.setCaretColor(new java.awt.Color(255, 255, 255));
        txtMaKH.setOpaque(false);
        jPanel1.add(txtMaKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 250, 50));

        txtHoten.setBackground(new java.awt.Color(0,0,0,0));
        txtHoten.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        txtHoten.setForeground(new java.awt.Color(255, 255, 255));
        txtHoten.setBorder(null);
        txtHoten.setCaretColor(new java.awt.Color(255, 255, 255));
        txtHoten.setOpaque(false);
        jPanel1.add(txtHoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 250, 50));

        txtSDT.setBackground(new java.awt.Color(0,0,0,0));
        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        txtSDT.setForeground(new java.awt.Color(255, 255, 255));
        txtSDT.setBorder(null);
        txtSDT.setCaretColor(new java.awt.Color(255, 255, 255));
        txtSDT.setOpaque(false);
        jPanel1.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 260, 50));

        tblDH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblDH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên khách hàng", "Điện thoại", "Địa chỉ", "Tổng tiền", "Trạng thái", "Ngày đặt hàng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDH.setFocusable(false);
        tblDH.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDH.setRowHeight(30);
        tblDH.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tblDH.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblDH.setShowVerticalLines(false);
        tblDH.getTableHeader().setReorderingAllowed(false);
        tblDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDHMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDH);
        if (tblDH.getColumnModel().getColumnCount() > 0) {
            tblDH.getColumnModel().getColumn(0).setPreferredWidth(5);
            tblDH.getColumnModel().getColumn(1).setPreferredWidth(130);
            tblDH.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 810, 210));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Danh sách đơn hàng");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        txtDiachi.setBackground(new java.awt.Color(0,0,0,0));
        txtDiachi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDiachi.setForeground(new java.awt.Color(255, 255, 255));
        txtDiachi.setBorder(null);
        txtDiachi.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDiachi.setOpaque(false);
        jPanel1.add(txtDiachi, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, 260, 50));

        btnChitiet.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnChitiet.setText("Xem chi tiết");
        btnChitiet.setBorder(null);
        btnChitiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChitietActionPerformed(evt);
            }
        });
        jPanel1.add(btnChitiet, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 480, 130, 40));
        jPanel1.add(linediachi, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, 260, 1));
        jPanel1.add(lineDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 260, 1));
        jPanel1.add(lineHoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 250, 1));
        jPanel1.add(lineMAKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 250, 1));

        btnPrint.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnPrint.setText("In Hóa Đơn");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, 110, 40));

        btnHistory.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btnHistory.setText("Xem lịch sử hóa đơn");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });
        jPanel1.add(btnHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 160, 40));

        txtsearch.setPreferredSize(new java.awt.Dimension(200, 35));
        jPanel1.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, -1, -1));

        btnSearch.setBackground(new java.awt.Color(255, 204, 204));
        btnSearch.setText("Tìm");
        btnSearch.setBorder(null);
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSearch.setMargin(new java.awt.Insets(5, 10, 5, 10));
        btnSearch.setPreferredSize(new java.awt.Dimension(80, 40));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 83, -1));

        btnHuy.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnHuy.setText("Hủy đơn");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanel1.add(btnHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 110, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backgroundform.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDHMouseClicked
        // TODO add your handling code here:
        if (tblDH.getSelectedRow() >= 0) {
            dao.reLoad();
            daoKH.reLoad();
            int madh = Integer.parseInt(tblDH.getValueAt(tblDH.getSelectedRow(), 0).toString());
            Donhang newdh = dao.find(madh);
            Khachhang newkh = daoKH.find(newdh.getMakh());
            txtMaKH.setText(newdh.getMakh());
            txtHoten.setText(newkh.getHoten());
            txtSDT.setText(newkh.getSdt());
            txtDiachi.setText(newkh.getDiachi());
            btnChitiet.setEnabled(true);
        }

    }//GEN-LAST:event_tblDHMouseClicked

    private void btnChitietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChitietActionPerformed
        // TODO add your handling code here:
        if(tblDH.getSelectedRow()>=0){
            String x = tblDH.getValueAt(tblDH.getSelectedRow(), 0).toString();
        Tienich.khachhang = daoKH.find(txtMaKH.getText());
        formADH form = new formADH();
        form.Fill(Integer.parseInt(x));

        JDesktopPane forms = this.getDesktopPane();
        this.dispose();
        forms.add(form);
        form.show();
        }else{
            Dialog.ThongBao(this, "Bạn chưa chọn đơn hàng");
        }
        
    }//GEN-LAST:event_btnChitietActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        daoKH.reLoad();
        dao.reLoad();
        model = (DefaultTableModel) tblDH.getModel();
        model.setRowCount(0);
        if (txtsearch.getText().equals("")) {
            for (Donhang a : dao.laydanhsach()) {
                model.addRow(new Object[]{
                    a.getMadh() + "",
                    daoKH.find(a.getMakh()).getHoten(),
                    daoKH.find(a.getMakh()).getSdt(),
                    daoKH.find(a.getMakh()).getDiachi(),
                    dao.getTongtien(a.getMadh()),
                    a.getTrangthai(),
                    Tienich.FixNgayDK(a.getNgaydh())
                });
            }
        } else {
            for (Donhang a : searchdh()) {
                model.addRow(new Object[]{
                    a.getMadh() + "",
                    daoKH.find(a.getMakh()).getHoten(),
                    daoKH.find(a.getMakh()).getSdt(),
                    daoKH.find(a.getMakh()).getDiachi(),
                    dao.getTongtien(a.getMadh()),
                    a.getTrangthai(),
                    Tienich.FixNgayDK(a.getNgaydh())
                });
            }
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        try {
            if (tblDH.getSelectedRow() >= 0) {
                String ma = tblDH.getValueAt(tblDH.getSelectedRow(), 0).toString();
                if (dao.getTongtienFloat(Integer.valueOf(ma)) <= 0) {
                    Dialog.ThongBao(this, "Chưa có sản phẩm nào");
                } else {
                    new PrintPDF().Print(Integer.parseInt(ma));
                    File newfile = new File(PrintPDF.destination);
                    Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " + newfile.getAbsolutePath());
                }

            }else{
                Dialog.ThongBao(this, "Bạn chưa chọn đơn hàng");
            }
        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        if (tblDH.getSelectedRow() >= 0) {
            int mahd = Integer.valueOf(tblDH.getValueAt(tblDH.getSelectedRow(), 0).toString());
            formBill.mahd = mahd;
            formBill newform = new formBill();
            newform.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            newform.setLocationRelativeTo(null);
            newform.setVisible(true);
        }else{
            Dialog.ThongBao(this, "Bạn chưa chọn đơn hàng");
        }
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        if (tblDH.getSelectedRow() >= 0) {
            int mahd = Integer.valueOf(tblDH.getValueAt(tblDH.getSelectedRow(), 0).toString());
            System.out.println(mahd);
            if (dao.getTongtienFloat(mahd) <= 0) {
                new BillDAO().deleteDB(mahd);
                int x = dao.deleteFromDB(mahd);
                if (x ==1) {
                    loaddata();
                    Dialog.ThongBao(this, "Hủy đơn thành công");
                } else {
                    Dialog.ThongBao(this, "Hủy đơn thất bại");
                }
            } else {
                Dialog.ThongBao(this, "Hóa đơn có giá trị, không thể hủy");
            }
        } else {
            Dialog.ThongBao(this, "Bạn chưa chọn đơn hàng");
        }
    }//GEN-LAST:event_btnHuyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChitiet;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator lineDT;
    private javax.swing.JSeparator lineHoten;
    private javax.swing.JSeparator lineMAKH;
    private javax.swing.JSeparator linediachi;
    private javax.swing.JTable tblDH;
    private javax.swing.JTextField txtDiachi;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JLabel txtMaDH;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
